// ----- ----- ----- ----- //
// -----   Anchors   ----- //
// ----- ----- ----- ----- //

// All top level anchors must be in a viewport of some sort
@mixin viewport {
  height: 100%;
  position: relative;
  width: 100%;
  z-index: 1;
}

// Line anchors. We assume the line is correctly positioned
// @param $anchorCount the number of anchors to distribute along the line
// @param $direction Optional, either horrizontal (default) or vertivle. Specifies which rules to use.
@mixin anchors-line($anchor-count, $direction: 'horizontal') {
  @for $i from 1 through $anchor-count {
    .anchor-line-#{$i} {
      position: absolute;
      transform: translate(-50%, -50%);
      @if $direction == 'horizontal' {
        left: ( 100 / $anchor-count * $i ) - ( 50 / $anchor-count ) + %;
      } @else {
        top: ( 100 / $anchor-count * $i ) - ( 50 / $anchor-count ) + %;
      }
    }
  }
}

// Circular anchors
// Even distribution
// @param $anchorCount the number of anchors to distribute along the line
// @param $radius the distance from the center point to place the anchors
// @param $arc Optional the degree start range to distribute the points
// @param $arc-center Optional central line used to direct the arc
@mixin anchors-circular($anchor-count, $radius, $arc: 360, $arc-center: 0) {

  // First, create a number line from the degree range with some padding
  // the center point minus half the arch, plus half the total arc range over the number of anchors
  $range-low: $arc-center - ( $arc / 2 );
  $range-high: $arc-center + ( $arc / 2 );
  $increment-degree: $arc / ( $anchor-count - 1 );

  @for $i from 1 through $anchor-count {
    $degree: ( 0 + ( ( $i - 1 ) * $increment-degree ) );

    .anchor-circle-#{$i} {
      position: absolute;

      // Set x to the center and y to the inverse of the radius
      // Rotate the content about the center by the degree
      transform: translate(-50%, -#{$radius}) rotate(#{( 0 + ( ( $i - 1 ) * $increment-degree ) )}deg);
      // Move the pooint of transformation back to the center point
      transform-origin: 0% #{$radius};

      & > div {
        position: absolute;

        // Now, rotate the content by the inverse of the degree
        // so it displays correctly
        transform: translate(-50%, -50%) rotate(-#{( 0 + ( ( $i - 1 ) * $increment-degree ) )}deg);
      }
    }
  }
}
